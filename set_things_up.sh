#!/bin/bash

# Script that installs every little thing in place
# (UBUNTU-ISH specific [!])


# Debugging
#set -x -e


# Shouldn't run as root: you want the files created here to be owned by you
if [ "$(whoami)" == "root" ]; then
	echo "Run without sudo!"
	exit 0
fi
# Updates repos
sudo apt-get update



echo -e "\n--- Installation of needed tools -- --- --- --- --- --- --- ---\n"

# Tries to install ack-grep
sudo apt-get install ack-grep
echo -e "\n* If this failed, please install ACK-GREP manually!"
echo    "  (>Enter)"
read

# Tries to install VIM
sudo apt-get install vim
echo -e "\n* If this failed, please install VIM manually!"
echo    "  (>Enter)"
read

# Tries to install GIT after checking that it doesn't exists
# (It definitely should exist, but...)
command -v git >/dev/null 2>&1 || {
	sudo apt-get install git-core git-email
	echo -e "\n* If this failed, please install GIT {git-core} manually!"
	echo    "  (>Enter)"
	read
	# Set up user details
	git config --global user.name "Iulius Curt"
	git config --global user.email "iulius.curt@gmail.com"
	git config --global credential.helper 'cache --timeout=3600'
}




echo -e "\n--- Necessary additional folders setup  --- --- --- --- --- ---\n"

# Setup ~/bin
mkdir -p $HOME/bin # it is already added to PATH in .bashrc

# Setup ~/.vim/backup and ~/.vim/tmp
mkdir -p $HOME/.vim/backup
mkdir -p $HOME/.vim/tmp




echo -e "\n--- Get Aiur (the home of personal configs) --- --- --- --- ---\n"

# Get Aiur from Github
cd $HOME
git clone https://github.com/iuliux/Aiur.git Aiur
AIUR="$HOME/Aiur"
cd -



echo -e "\n--- RC files setup  --- --- --- --- --- --- --- --- --- --- ---\n"

cd $HOME

# * Setup vimrc
if [ -f .vimrc -o -h .vimrc ]; then
	mv -f .vimrc .vimrc.old
fi
ln -s $AIUR/.vimrc .vimrc

# * Setup bashrc
echo -e "\n# Generated by set_things_up script to include Aiur's bashrc" >> .bashrc
echo -e "if [ -f $AIUR/.bashrc ]; then . $AIUR/.bashrc; fi\n" >> .bashrc

if [ -f .bash_aliases -o -h .bash_aliases ]; then
	mv -f .bash_aliases .bash_aliases.old
fi
ln -s $AIUR/.bash_aliases .bash_aliases

# * Setup inputrc
if [ -f .inputrc -o -h .inputrc ]; then
	mv -f .inputrc .inputrc.old
fi
ln -s $AIUR/.inputrc .inputrc

cd -




echo -e "\n--- Eclipse setup (if wanted) - --- --- --- --- --- --- --- ---\n"

# Ask
echo "Would you like to set Eclipse up? (y/N)"
read ans
if [ "$ans" == "y" ] || [ "$ans" == "Y" ]; then
	echo "Please untar Eclipse under $HOME/Eclipse (case-sensitive)"
	echo "  (>Enter when ready)"
	read

	# Symlink it in bin (to have it in PATH)
	ln -s $HOME/Eclipse/eclipse $HOME/bin/eclipse

	# Setup app.desktop shortcut for Gnome to know about Eclipse
	ECLIPSE_SHCUT="$HOME/.local/share/applications/eclipse.desktop"
	cp $AIUR/eclipse/eclipse.desktop $ECLIPSE_SHCUT
	echo -e "Icon=$HOME/Eclipse/icon.xpm\n" >> $ECLIPSE_SHCUT
fi




echo -e "\n--- Logitech MX Performance MOUSE setup --- --- --- --- --- ---\n"

# Ask
echo "Would you like to set MX Performance up? (y/N)"
echo "(will install XAutomation and XBindKeys)"
read ans
if [ "$ans" == "y" ] || [ "$ans" == "Y" ]; then
	# Install XBindKeys
	sudo apt-get install xbindkeys
	# Install Xte
	sudo apt-get install xautomation

	# Setup xbindkeysrc
	if [ -f .xbindkeysrc -o -h .xbindkeysrc ]; then
		mv -f .xbindkeysrc .xbindkeysrc.old
	fi
	ln -s $AIUR/xbindkeys/.xbindkeysrc .xbindkeysrc

	# Setup xbindkeys.conf (add XBindKeys to startup)
	sudo ln -s $AIUR/xbindkeys/xbindkeys.conf /etc/init/xbindkeys.conf
fi




echo -e "\n--- Sublime Text 2/3 setup  --- --- --- --- --- --- --- --- ---\n"

echo "What version? (2 or 3)"
read SUBTXVER

# Installs Sublime Text (ask nicely)
echo "* Install Sublime Text $SUBTXVER into $HOME/SublimeText$SUBTXVER/ (notice no spaces)"
echo "    (Download URL: http://www.sublimetext.com/$SUBTXVER)"
echo "  (>Enter)"
read
echo "* Run it once (and close it) to complete the installation"
echo "  (>Enter)"
read

# Make symlink sublime->sublime_text (to have it in PATH)
ln -s $HOME/SublimeText$SUBTXVER/sublime_text $HOME/bin/sublime$SUBTXVER

# Setup app.desktop shortcut for Gnome to know about Sublime
SUBLIME_SHCUT_PATH="$HOME/.local/share/applications"
SUBLIME_SHCUT="$SUBLIME_SHCUT_PATH/sublime.desktop"
mkdir -p $SUBLIME_SHCUT_PATH
cp $AIUR/sublime-text-$SUBTXVER/sublime.desktop $SUBLIME_SHCUT
echo -e "Icon=$HOME/SublimeText$SUBTXVER/Icon/256x256/sublime_text.png\n" >> $SUBLIME_SHCUT


# Now install plugins
SUBL_PACK_BASE=sublime-text-$SUBTXVER/Packages
SUBLIME_PACKAGES="$HOME/.config/$SUBL_PACK_BASE"
mkdir -p $SUBLIME_PACKAGES/
mkdir -p $SUBLIME_PACKAGES/User
cd $SUBLIME_PACKAGES/

# # * Back There
# git clone git://github.com/iuliux/SublimeText2-BackThere.git Back-There

# # * SublimeFileDiffs
# git clone git://github.com/colinta/SublimeFileDiffs.git SublimeFileDiffs

# # * SublimeLinter
# git clone git://github.com/SublimeLinter/SublimeLinter.git SublimeLinter

# # * TrailingSpaces
# git clone git://github.com/SublimeText/TrailingSpaces.git TrailingSpaces

# # * Jedi - Autocomplete and more
# git clone https://github.com/srusskih/SublimeJEDI.git JediPython

echo "Now you should install PackageControl (from https://sublime.wbond.net/)"
echo "Packages to install:"
echo "  - FileDiffs"
echo "  - TrailingSpaces"
echo "  - [ST2] Jedi"
echo "  - [ST2] BackThere"
echo "  - [ST3] Anaconda"
echo
echo "  (>Enter)"
read


# Setup the config files
ls -1 "$AIUR/$SUBL_PACK_BASE" | while read sblcfgdir; do
	# For each config directory
	ls -1 "$AIUR/$SUBL_PACK_BASE/$sblcfgdir" | while read sblcfg; do
		#For each config file
		if [ -f "$sblcfgdir/$sblcfg" -o -h "$sblcfgdir/$sblcfg" ]; then
			# Backup the existing file
			mv -f "$sblcfgdir/$sblcfg" "$sblcfgdir/$sblcfg.old"
		fi
		ln -s "$AIUR/$SUBL_PACK_BASE/$sblcfgdir/$sblcfg" "$sblcfgdir/$sblcfg"
	done
done

cd -




echo -e "\n--- Install additional useful apps  --- --- --- --- --- --- ---\n"

## Lightweight
# Gnome-Do
sudo apt-get install gnome-do
# Guake
sudo apt-get install guake
# Terminator
sudo apt-get install terminator
# HTop
sudo apt-get install htop
# Py-pip
sudo apt-get install python-pip

## Heavyweight
# VLC
sudo apt-get install vlc

# Just do those manually if needed:
# Chrome
# sudo apt-get install chromium-browser
# Opera
# sudo apt-get install opera





echo -e "\n--- Done -- --- --- --- --- --- --- --- --- --- --- --- --- ---\n"
